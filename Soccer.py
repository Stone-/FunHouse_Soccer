# -*- coding: utf-8 -*-
'''
    Module: Soccer.py
    Age: Cleft with Jalak paged in
    Date: December, 2012
    Author: Stone (01141040)
    This is a very stripped version of the Soccer Field.
'''
'''
    Date: December, 2012
    Im not comfortable publishing a few of the functions i used to build this.
    So dumped all the matrix data for the columns into a dictionary.
    Then made a simple warp to set up the field using that dictionary.
    I'll try to add more when i have time but this should be sufficient to get you started.
'''

from Plasma import *


# This is a dictionary of column names and matrix data.
columnMap = {'columnPhys_00' : ((-4.37113904953e-08, 0.0, 1.0, 46.9999980927), (0.0, 1.0, 0.0, 827.999973297), (-1.0, 0.0, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_01' : ((-4.37113904953e-08, 0.0, 1.0, 112.599992752), (0.0, 1.0, 0.0, 857.999992371), (-1.0, 0.0, -4.37113904953e-08, 0.432999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_02' : ((-4.37113904953e-08, 0.0, 1.0, 41.4000034332), (0.0, 1.0, 0.0, 857.999992371), (-1.0, 0.0, -4.37113904953e-08, 0.432999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_03' : ((-4.37113904953e-08, 0.0, 1.0, 107.000005245), (0.0, 1.0, 0.0, 975.0), (-1.0, 0.0, -4.37113904953e-08, -2.99699993134), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_04' : ((-4.37113904953e-08, 0.0, 1.0, 46.9999980927), (0.0, 1.0, 0.0, 975.0), (-1.0, 0.0, -4.37113904953e-08, -2.99699993134), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_05' : ((-4.37113904953e-08, 0.0, 1.0, 107.000005245), (0.0, 1.0, 0.0, 1121.99997902), (-1.0, 0.0, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_06' : ((-4.37113904953e-08, 0.0, 1.0, 46.9999980927), (0.0, 1.0, 0.0, 1121.99997902), (-1.0, 0.0, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_07' : ((-4.37113904953e-08, 0.0, 1.0, 112.599992752), (0.0, 1.0, 0.0, 1092.00000763), (-1.0, 0.0, -4.37113904953e-08, 0.432999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_08' : ((-4.37113904953e-08, 0.0, 1.0, 41.4000034332), (0.0, 1.0, 0.0, 1092.00000763), (-1.0, 0.0, -4.37113904953e-08, 0.432999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_09' : ((-4.37113904953e-08, 0.0, 1.0, 107.000005245), (0.0, 1.0, 0.0, 827.999973297), (-1.0, 0.0, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_10' : ((0.991790008545, 0.127877247334, 0.0, 139.999998093), (0.0, -6.57112884521e-08, 1.0, 975.0), (0.127877247334, -0.991790008545, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_11' : ((0.991790008545, 0.127877247334, 0.0, 139.999998093), (0.0, -6.57112884521e-08, 1.0, 1034.99996662), (0.127877247334, -0.991790008545, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_12' : ((1.0, 0.0, 0.0, 0.027889251709), (0.0, 1.0, 0.0, 0.0982389450073), (0.0, 0.0, 1.0, -29.6211242676), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_13' : ((0.991790008545, 0.127877247334, 0.0, 139.999998093), (0.0, -6.57112884521e-08, 1.0, 1095.00002861), (0.127877247334, -0.991790008545, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_14' : ((0.707106781006, 0.707106781006, 0.0, 17.0000004768), (-0.707106781006, 0.707106781006, 0.0, 860.999965668), (0.0, 0.0, 1.0, -22.6670002937), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_15' : ((0.992420482635, -0.122888338566, 0.0, 13.9999998093), (0.0, -2.18935966492e-08, 1.0, 1095.00002861), (-0.122888338566, -0.992420482635, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_16' : ((0.707106781006, 0.707106781006, 0.0, 137.000000477), (-0.707106781006, 0.707106781006, 0.0, 860.999965668), (0.0, 0.0, 1.0, -22.6670002937), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_17' : ((0.707106781006, 0.707106781006, 0.0, 17.0000004768), (-0.707106781006, 0.707106781006, 0.0, 1088.99998665), (0.0, 0.0, 1.0, -22.6670002937), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_18' : ((0.991790008545, 0.127877247334, 0.0, 139.999998093), (0.0, -6.57112884521e-08, 1.0, 855.000019073), (0.127877247334, -0.991790008545, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_19' : ((0.991790008545, 0.127877247334, 0.0, 139.999998093), (0.0, -6.57112884521e-08, 1.0, 914.999961853), (0.127877247334, -0.991790008545, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_20' : ((0.707106781006, 0.707106781006, 0.0, 137.000000477), (-0.707106781006, 0.707106781006, 0.0, 1088.99998665), (0.0, 0.0, 1.0, -22.6670002937), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_21' : ((0.992420482635, -0.122888338566, 0.0, 13.9999998093), (0.0, -2.18935966492e-08, 1.0, 855.000019073), (-0.122888338566, -0.992420482635, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_22' : ((0.992420482635, -0.122888338566, 0.0, 13.9999998093), (0.0, -2.18935966492e-08, 1.0, 914.999961853), (-0.122888338566, -0.992420482635, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_23' : ((0.992420482635, -0.122888338566, 0.0, 13.9999998093), (0.0, -2.18935966492e-08, 1.0, 975.0), (-0.122888338566, -0.992420482635, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),    'columnPhys_24' : ((0.992420482635, -0.122888338566, 0.0, 13.9999998093), (0.0, -2.18935966492e-08, 1.0, 1034.99996662), (-0.122888338566, -0.992420482635, -4.37113904953e-08, 0.332999992371), (0.0, 0.0, 0.0, 1.0)),}
 

# Soccer.Field()
def Field():
    ''' Set up the field by warp the columns to the matrix data in the columnMap. '''
    for column in columnMap:                            # go through every column name in the dictionary
        object = PtFindSceneobject(column, 'Jalak')         # find the scene object from its name.
        matrix = ptMatrix44()                               # create a new empty matrix
        matrix.setData(columnMap[column])                   # set the new matrix to the data in the dictionary.
        object.netForce(1)                                  # send over the net so others can see.
        object.physics.warp(matrix)                         # warp object to the new matrix.


# Soccer.Ball()
def Ball():
    ''' Warp the ball to the center of the soccer field. '''
    object = PtFindSceneobject('Sphere1', 'Jalak')  # get the sphere as a scene object.
    object.netForce(1)                              # send over the net so others can see.
    object.physics.warp(ptPoint3(77, 975, 1.75))    # warp object to the ptPoint3.